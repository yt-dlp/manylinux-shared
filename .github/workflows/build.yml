name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/build.yml"
      - "docker/**"
      - "tests/**"
      - "*.sh"
  pull_request:
    paths:
      - ".github/workflows/build.yml"
      - "docker/**"
      - "tests/**"
      - "*.sh"

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  ORIGIN: yt-dlp/manylinux-shared

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  pre_commit:
    name: Pre-commit checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd  # v3.0.1

  build_matrix:
    needs: pre_commit
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - id: matrix
        name: build matrix
        shell: python
        run: |
          import os
          import json
          reduced = [
              ("x86_64", "ubuntu-24.04", ("manylinux2014", "manylinux_2_28", "musllinux_1_2")),
              ("aarch64", "ubuntu-24.04-arm", ("manylinux2014", "manylinux_2_28", "musllinux_1_2")),
              ("armv7l", "ubuntu-24.04-arm", ("manylinux_2_31",)),
          ]
          expanded = [{"policy": policy, "platform": platform, "runner": runner} for platform, runner, policies in reduced for policy in policies]
          print(json.dumps(expanded, indent=2))
          with open(os.environ["GITHUB_OUTPUT"], "at") as f:
              f.write(f"matrix={json.dumps(expanded)}")

  build_manylinux:
    name: ${{ matrix.policy }}_${{ matrix.platform }}
    needs: build_matrix
    runs-on: ${{ matrix.runner }}
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build_matrix.outputs.matrix) }}
    env:
      POLICY: ${{ matrix.policy }}
      PLATFORM: ${{ matrix.platform }}
      COMMIT_SHA: ${{ github.sha }}
      MANYLINUX_DISABLE_CLANG: '1'
      MANYLINUX_DISABLE_CLANG_FOR_CPYTHON: '1'

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 50

      - name: Set up QEMU
        if: matrix.platform == 'ppc64le' || matrix.platform == 'riscv64' || matrix.platform == 's390x'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == env.ORIGIN
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: ./build.sh

      - name: Deploy
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == env.ORIGIN
        run: ./deploy.sh

  all_passed:
    needs: [build_manylinux]
    runs-on: ubuntu-latest
    steps:
      - run: echo "All jobs passed"
